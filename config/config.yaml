data:
  raw_data_path: 'data/raw/full_data.csv'
  external_data_path: 'data/external/external_data.csv'
  data_splitted_train_path: 'data/train.csv'
  data_splitted_val_path: 'data/val.csv'
  data_splitted_test_path: 'data/test.csv'
  target_col: "depression"
  columns:
    - 'id'
    - 'name'
    - 'gender'
    - 'age'
    - 'city'
    - 'occupation_status'
    - 'profession'
    - 'academic_pressure'
    - 'work_pressure'
    - 'cgpa'
    - 'study_satisfaction'
    - 'job_satisfaction'
    - 'sleep_duration'
    - 'dietary_habits'
    - 'degree'
    - 'suicidal_thoughts'
    - 'work_study_hours'
    - 'financial_stress'
    - 'family_history_mental_illness'
    - 'depression'
  features:
    cat_binary_features:
      - "gender"
      - "occupation_status"
      - "suicidal_thoughts"
      - "family_history_mental_illness"
    cat_multiclass_features:
      - "dietary_habits"
      - "sleep_duration"
      - "degree"
    cat_highcard_features:
      - "profession"
      - "city"
    num_standard_features:
      - "age"
      - "work_study_hours"
      - "financial_stress"
      - "work_academic_stress"
      - "job_study_satisfaction"
    num_custom_features:
      - "academic_pressure"
      - "work_pressure"
      - "cgpa"
      - "study_satisfaction"
      - "job_satisfaction"

data_split:
  test_size: 0.1
  random_state: 42

feature_selection:
  estimator: "random_forest"
  estimator_params:
      class_weight: 'balanced'
      n_estimators: 100
      random_state: 42
  params:
    threshold: 0.01
  params_grid:
#    feature_selector__threshold: [0.001]
    feature_selector__threshold: [ 0.001, 0.01 ]
#    feature_selector__estimator__max_depth: [10]
    feature_selector__estimator__max_depth: [10]

models:
  to_test:
    - 'logistic_regression'
    - 'random_forest'
  scoring:
    primary: "f1_weighted"
  logistic_regression:
    name: "logistic_regression"
    params:
      random_state: 42
      max_iter: 4000
      class_weight: 'balanced'
      solver: 'saga'
    params_grid:
      standard_preprocessor__categorical__cat_multiclass__encoder__drop: ["first"]
      model__C: [10]
#      model__C: [ 1, 10, 100 ]
      model__penalty: ["l1"]
#      model__penalty: [ "l1", "l2" ]

    model_output_path: "models/logistic_regression_tuned_model.pkl"
    metadata_output_path: "models/logistic_regression_metadata.json"


  random_forest:
    name: "random_forest"
    params:
      random_state: 42
      class_weight: 'balanced'
    params_grid:
      standard_preprocessor__categorical__cat_multiclass__encoder__drop:  [null]
      model__n_estimators: [ 100 ]
#      model__n_estimators: [100, 200, 300]
      model__max_depth: [10]
#      model__max_depth: [10, 20]
      model__min_samples_leaf: [2]
#      model__min_samples_leaf: [ 2, 4 ]
    model_output_path: "models/random_forest_tuned_model.pkl"
    metadata_output_path: "models/random_forest_metadata.json"

cross_validation:
  n_splits: 3
  shuffle: true
  random_state: 42

outputs:
  # from train_and_tune file
  models_selection_output_path: "models/models_selection_metrics.csv"
  final_metadata_output_path: "models/final_model_metadata.json"
  final_model_output_path: "models/final_model.pkl"
  # from evaluate file
  final_evaluation_output_path: "results/final_evaluation.json"
  predictions_output_path: "results/external_data_predictions.csv"

flagging_map:
  work_pressure:
    not_applicable:
      occupation_status: Student
    imputed:
      occupation_status: Working Professional
  job_satisfaction:
    not_applicable:
      occupation_status: Student
    imputed:
      occupation_status: Working Professional
  academic_pressure:
    not_applicable:
      occupation_status: Working Professional
    imputed:
      occupation_status: Student
  study_satisfaction:
    not_applicable:
      occupation_status: Working Professional
    imputed:
      occupation_status: Student
  cgpa:
    not_applicable:
      occupation_status: Working Professional
    imputed:
      occupation_status: Student
